version: '3.1'
services:

  database:
    image: postgres:14-alpine
    container_name: postgres14
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: foobar-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 5

  migration:
    build:
       context: .
       dockerfile: DockerFiles/MigrationDockerFile
    container_name: golang-migrate
    command:  migrate -path /migration -database "postgresql://root:secret@postgres14:5432/foobar-db?sslmode=disable" -verbose up
    depends_on:
      database:
        condition: 
           service_healthy

  goserver:
    build:
      context: .
      dockerfile: DockerFiles/GoDockerFile
    restart: unless-stopped
    container_name: goserver-foobar
    ports:
       - "9000:9000"
    depends_on:
      migration:
        condition: 
          service_completed_successfully
       
  vueserver:
    build:
      context: .
      dockerfile: DockerFiles/VueDockerFile
    restart: unless-stopped
    container_name: vueserver-foobar
    depends_on:
      goserver:
        condition: 
          service_started
    ports:
       - "8080:8080"


networks:
   default:
     external:
       name: mock-network
